import { AbstractMethod } from '../../../core/AbstractMethod';
import type { EthereumTransaction, EthereumTransactionEIP1559 } from '../../../types/api/ethereum';
import type { EthereumNetworkInfo } from '../../../types';
import type { EthereumDefinitions } from '@trezor/protobuf/lib/messages';
type Params = {
    path: number[];
    network?: EthereumNetworkInfo;
    definitions?: EthereumDefinitions;
    chunkify: boolean;
} & ({
    type: 'legacy';
    tx: EthereumTransaction;
} | {
    type: 'eip1559';
    tx: EthereumTransactionEIP1559;
});
export default class EthereumSignTransaction extends AbstractMethod<'ethereumSignTransaction', Params> {
    init(): void;
    initAsync(): Promise<void>;
    get info(): string;
    run(): Promise<{
        serializedTx: string;
        v: string;
        r: string;
        s: string;
    }>;
}
export {};
//# sourceMappingURL=ethereumSignTransaction.d.ts.map