import { AbstractMethod } from '../../../core/AbstractMethod';
import type { EthereumSignTypedDataTypes, EthereumSignTypedData as EthereumSignTypedDataParams, EthereumSignTypedHash as EthereumSignTypedHashParams } from '../../../types/api/ethereum';
import type { EthereumNetworkInfo } from '../../../types';
import type { EthereumDefinitions } from '@trezor/protobuf/lib/messages';
type Params = (Omit<EthereumSignTypedDataParams<EthereumSignTypedDataTypes>, 'path'> | Omit<EthereumSignTypedHashParams<EthereumSignTypedDataTypes>, 'path'>) & {
    address_n: number[];
    network?: EthereumNetworkInfo;
    definitions?: EthereumDefinitions;
};
export default class EthereumSignTypedData extends AbstractMethod<'ethereumSignTypedData', Params> {
    init(): void;
    initAsync(): Promise<void>;
    get info(): string;
    run(): Promise<{
        address: string;
        signature: string;
    }>;
}
export {};
//# sourceMappingURL=ethereumSignTypedData.d.ts.map